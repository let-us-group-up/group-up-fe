"""Address"""
type Address {
  address1: String!
  address2: String!
  id: ID!
}

"""Date custom scalar type"""
scalar Date

"""Event"""
type Event {
  address: Address
  dateAndTime: Date
  description: String
  id: ID!
  messenger: Messenger
  participants: [Participant!]!
  title: String!
}

"""Messenger"""
type Messenger {
  id: ID!
  provider: Provider!
}

type Mutation {
  createEvent(author: ID!, title: String!): Event!
  createUser(email: String!): User!
}

"""Participant"""
type Participant {
  role: Roles!
  user: User
}

enum Provider {
  Telegram
}

type Query {
  event(id: ID!): Event
  user(id: ID!): User
}

enum Roles {
  Organizer
  Participant
}

"""User"""
type User {
  email: String!
  id: ID!
}
